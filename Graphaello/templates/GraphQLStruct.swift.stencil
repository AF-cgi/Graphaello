{% for fragment in graphqlstruct.fragments %}
extension {{ fragment.name }} : Fragment {
    public typealias UnderlyingType = {{ fragment.api.name }}.{{ fragment.target.name }}
}
{% endfor %}

extension {{ graphqlstruct.definition.name }} {
    {% for fragment in graphqlstruct.fragments %}
    typealias {{ fragment.target.name }} = {{ fragment.name }}
    {% endfor %}
    {% if graphqlstruct.query %}
    typealias Data = {{ graphqlstruct.definition.name }}Query
    {% endif %}
    
    init({{ initializerArguments|swiftCodeArray|join:", " }}) {
        self.init({{ initializerValueAssignments|swiftCodeArray|join:", " }})
    }
}

{% if graphqlstruct.query %}
extension {{ graphqlstruct.query.api.name }} {
    
    func {{ functionName }}() -> some View {
        fatalError()
    }
    
}
{% endif %}
