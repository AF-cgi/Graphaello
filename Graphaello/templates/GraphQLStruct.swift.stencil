{% for fragment in graphqlstruct.fragments %}
extension {{ fragment.name }} : Fragment {
    typealias UnderlyingType = {{ fragment.api.name }}.{{ fragment.target.name }}
}
{% endfor %}

extension {{ graphqlstruct.definition.name }} {
    {% for fragment in graphqlstruct.fragments %}
    typealias {{ fragment.target.name }} = {{ fragment.name }}
    {% endfor %}
    {% if graphqlstruct.query %}
    typealias Data = {{ graphqlstruct.definition.name }}Query.Data
    {% endif %}
    
    init({{ initializerArguments|swiftCodeArray|join:", " }}) {
        self.init({{ initializerValueAssignments|swiftCodeArray|join:", " }})
    }
}

{% if graphqlstruct.query %}
extension {{ graphqlstruct.query.api.name }} {
    
    func {{ functionName }}({{ queryRendererArguments|swiftCodeArray|join:", " }}) -> some View {
        return QueryRenderer(client: client,
                             query: {{ graphqlstruct.definition.name }}Query({{ queryArgumentAssignments|swiftCodeArray|join:", " }})) { data in
        
            {{ graphqlstruct.definition.name }}({{ initializerArgumentAssignmentFromQueryData|swiftCodeArray|join:", " }})
        }
    }
    
}
{% endif %}
