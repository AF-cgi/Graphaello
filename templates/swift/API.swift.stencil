// MARK: - {{ api.name }}

struct {{ api.name }} {
    let client: ApolloClient

    {{ api.query.fields|code:"static" }}
    {{ api.types|code }}
}

{% for type in api.types %}
extension GraphQLFragmentPath where UnderlyingType == {{ api.name }}.{{ type.name }} {
    {{ type.fields|code }}

    {% for interface in graphQLType.interfaces %}
    var {{ interface.name|camelized|keywordProtected }}: GraphQLFragmentPath<{{interface.name}}> { .init() }
    {% endfor %}

    {% for possibleType in graphQLType.possibleTypes %}
    var {{ possibleType.name|camelized|keywordProtected }}: GraphQLFragmentPath<{{possibleType.name}}?> { .init() }
    {% endfor %}
}

extension GraphQLFragmentPath where UnderlyingType == {{ api.name }}.{{ type.name }}? {
    {{ type.fields|code:"optional" }}

    {% for interface in graphQLType.interfaces %}
    var {{ interface.name|camelized|keywordProtected }}: GraphQLFragmentPath<{{interface.name}}> { .init() }
    {% endfor %}

    {% for possibleType in graphQLType.possibleTypes %}
    var {{ possibleType.name|camelized|keywordProtected }}: GraphQLFragmentPath<{{possibleType.name}}?> { .init() }
    {% endfor %}
}
{% endfor %}
